{"version":3,"sources":["GoodsList.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["GoodsList","_ref","goods","_jsx","children","map","good","className","concat","color","name","id","getAll","fetch","then","response","json","ServerRequest","App","_useState","useState","_useState2","_slicedToArray","setGoods","_useState3","_useState4","serverReqeust","setServerReqeust","useEffect","AllGoods","FiveFirst","sort","a","b","localeCompare","slice","OnlyRed","filter","_jsxs","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"wMAOaA,EAA6B,SAAHC,GAAA,IAAMC,EAAKD,EAALC,MAAK,OAChDC,cAAA,MAAAC,SACGF,EAAMG,KAAI,SAAAC,GAAI,OACbH,cAAA,MAEE,UAAQ,OACRI,UAAS,GAAAC,OAAKF,EAAKG,MAAK,UAASL,SAEhCE,EAAKI,MAJDJ,EAAKK,UCNX,SAASC,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAGxB,ICJFC,GAAa,SAAbA,KAAa,eAAbA,EAAa,sBAAbA,EAAa,mBAAbA,MAAa,KAMX,IAAMC,EAAgB,WAC3B,IAAAC,EAA0BC,mBAAiB,IAAGC,EAAAC,YAAAH,EAAA,GAAvCjB,EAAKmB,EAAA,GAAEE,EAAQF,EAAA,GACtBG,EAGIJ,mBAA+B,MAAKK,EAAAH,YAAAE,EAAA,GAFtCE,EAAaD,EAAA,GACbE,EAAgBF,EAAA,GAmBlB,OAhBAG,qBAAU,WACR,OAAQF,GACN,KAAMT,EAAcY,SAClBjB,IAASE,KAAKS,GACd,MACF,KAAMN,EAAca,UDbjBlB,IACJE,MAAK,SAAAZ,GAAK,OAAIA,EACZ6B,MAAK,SAACC,EAAGC,GAAC,OAAKD,EAAEtB,KAAKwB,cAAcD,EAAEvB,SAAOyB,MAAM,EAAG,MCYzCrB,KAAKS,GACjB,MACF,KAAMN,EAAcmB,QDVjBxB,IACJE,MAAK,SAAAZ,GAAK,OAAIA,EAAMmC,QAAO,SAAA/B,GAAI,MAAmB,QAAfA,EAAKG,YCUvBK,KAAKS,MAKtB,CAACG,IAGFY,eAAA,OAAK/B,UAAU,MAAKH,SAAA,CAClBD,cAAA,MAAAC,SAAI,0BAEJD,cAAA,UACEoC,KAAK,SACL,UAAQ,aACRC,QAAS,kBAAMb,EAAiBV,EAAcY,WAAUzB,SACzD,mBAIDD,cAAA,UACEoC,KAAK,SACL,UAAQ,oBACRC,QAAS,kBAAMb,EAAiBV,EAAca,YAAW1B,SAC1D,uBAIDD,cAAA,UACEoC,KAAK,SACL,UAAQ,aACRC,QAAS,kBAAMb,EAAiBV,EAAcmB,UAAShC,SACxD,mBAGkB,OAAlBsB,GAA0BvB,cAACH,EAAS,CAACE,MAAOA,QC3DnDuC,IAASC,OACPvC,cAACe,EAAG,IACJyB,SAASC,eAAe,U","file":"static/js/main.1a14d946.chunk.js","sourcesContent":["import React from 'react';\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li\n        key={good.id}\n        data-cy=\"good\"\n        className={`${good.color}--item`}\n      >\n        {good.name}\n      </li>\n    ))}\n  </ul>\n);\n","import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => response.json());\n}\n\nexport const get5First = () => {\n  return getAll()\n    .then(goods => goods\n      .sort((a, b) => a.name.localeCompare(b.name)).slice(0, 5));\n};\n\nexport const getRedGoods = () => {\n  return getAll()\n    .then(goods => goods.filter(good => good.color === 'red'));\n};\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport { GoodsList } from './GoodsList';\nimport { Good } from './types/Good';\nimport { getAll, get5First, getRedGoods } from './api/goods';\n\nenum ServerRequest {\n  AllGoods = 'ALL',\n  FiveFirst = 'FiveFirst',\n  OnlyRed = 'OnlyRed',\n}\n\nexport const App: React.FC = () => {\n  const [goods, setGoods] = useState<Good[]>([]);\n  const [\n    serverReqeust,\n    setServerReqeust,\n  ] = useState<ServerRequest | null>(null);\n\n  useEffect(() => {\n    switch (serverReqeust) {\n      case (ServerRequest.AllGoods):\n        getAll().then(setGoods);\n        break;\n      case (ServerRequest.FiveFirst):\n        get5First().then(setGoods);\n        break;\n      case (ServerRequest.OnlyRed):\n        getRedGoods().then(setGoods);\n        break;\n      default:\n        break;\n    }\n  }, [serverReqeust]);\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of Goods</h1>\n\n      <button\n        type=\"button\"\n        data-cy=\"all-button\"\n        onClick={() => setServerReqeust(ServerRequest.AllGoods)}\n      >\n        Load all goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"first-five-button\"\n        onClick={() => setServerReqeust(ServerRequest.FiveFirst)}\n      >\n        Load 5 first goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"red-button\"\n        onClick={() => setServerReqeust(ServerRequest.OnlyRed)}\n      >\n        Load red goods\n      </button>\n      {serverReqeust !== null && <GoodsList goods={goods} />}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}